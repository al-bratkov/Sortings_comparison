import pandas as pd
import numpy as np
import copy
import random as rd
import matplotlib.pyplot as plt
import sort_comparing as sc

sort_types_story = pd.DataFrame(columns=['Length', 'Type', 'Median', 'Std',
                                   'Deviation mean', 'Deviation max', 'Deviation median', 'Deviation std',
                                   'Time py', 'Time bubble', 'Time select', 'Time insert', 'Time merge', 'Time quick'])

# sort_types_story.to_csv('sort.csv')
def describe(seq):
    inner_seq = copy.copy(seq)
    res = dict()
    res['Length'] = len(inner_seq)
    res['Type'] = str(type(inner_seq))
    new_inner_seq = np.array(inner_seq)
    ordered_seq = sorted(new_inner_seq)
    deviation = new_inner_seq - ordered_seq
    res['Median'] = np.median(inner_seq)
    res['Std'] = np.std(inner_seq)
    res['Deviation mean'] = np.mean(deviation)
    res['Deviation max'] = np.max(deviation)
    res['Deviation median'] = np.median(deviation)
    res['Deviation std'] = np.std(deviation)
    return res


def timing(seq):
    inner_seq = copy.copy(seq)
    res = dict()
    res['Time py'] = sc.py_sort(inner_seq)
    res['Time bubble'] = sc.bubble_sort(inner_seq)
    res['Time select'] = sc.sort_with_select_man(inner_seq)
    res['Time insert'] = sc.sort_with_insert(inner_seq)
    res['Time merge'] = sc.sort_with_merge(inner_seq)
    try:
        res['Time quick'] = sc.quick_sort(inner_seq)
    except RecursionError:
        res['Time quick'] = None
    return res


def fill_df(part_to_add, seq):
    inner_seq = copy.copy(seq)
    half1 = describe(inner_seq).values()
    half2 = timing(inner_seq).values()
    new_row = list(half1) + list(half2)
    part_to_add.append(new_row)
    return part_to_add


def expand_df(part, file='sort.csv'):
    df = pd.DataFrame(part)
    df = df.fillna(value=np.nan)
    df.to_csv(file, mode='a', header=False)


def fill_db(attempts=100,  sizes=[10, 100, 200, 500, 750, 950]):
    part_to_add = []
    for size in sizes:
        for i in range(attempts):
            seqs = sc.row_making(size)[::-1]
            for seq in seqs:
                part_to_add = fill_df(part_to_add, seq)
    expand_df(part_to_add)
    print('Values were added to database')


class ResearchDatabase:
    def __init__(self, df):
        self.df = df
        print(df.columns)
        print(df.info())
        self.sizes = set(df["Length"])

    def column_summary(self, column):
        summary = {'min time': column.min(), "max time": column.max(),
                     "avg time": column.mean(),
                     "time range": column.max() - column.min()}
        return summary

    def compare_summary(self):
        pass

    def dif_between_seq_types(self, length=0, sort_type_col=""):
        def count_range(col):
            return np.max(col) - np.min(col)
        summary = self.df[self.df["Length"] == length].groupby("Type")[sort_type_col].describe() # agg([np.min, np.max, np.mean, count_range])
        return summary

def checking():
    l, ar = sc.row_making(10)
    comp_res = [[], []]
    funcs = [sc.py_sort, sc.bubble_sort, sc.sort_with_select_man, sc.sort_with_insert, sc.sort_with_merge,
             sc.quick_sort]
    for func in funcs:
        comp_res[0].append(func(l))
        comp_res[1].append(func(ar))
    part_to_add = []
    for seq in l, ar:
        part_to_add = fill_df(part_to_add, seq)
    expand_df(part_to_add, 'sort.csv')
    view_into = pd.read_csv('sort.csv')
    print(l)
    print(comp_res[0])
    print(comp_res[1])
    print(view_into[view_into["Length"] == 10][["Type", "Time bubble", "Time select",
                                                "Time insert", "Time merge", "Time quick"]])
    print(np.array(comp_res[0]) > np.array(comp_res[0]))
    sort_types_story.to_csv('sort.csv')


for _ in range(5):
    fill_db()
view_into = pd.read_csv('sort.csv')
test = ResearchDatabase(view_into)
print(test.dif_between_seq_types(100, "Time insert"))

"""
one_size = view_into[view_into["Length"] == 950]
one_size_list = one_size[one_size["Type"] == "<class 'list'>"]
view_into_list = view_into[view_into["Type"] == "<class 'list'>"][["Type", "Length", "Time bubble", "Time select",
                                                                   "Time insert", "Time merge", "Time quick", "Time py"]]
view_into_ar = view_into[view_into["Type"] == "<class 'numpy.ndarray'>"][["Type", "Length", "Time py", "Time bubble",
                                                                          "Time select", "Time insert", "Time merge",
                                                                          "Time quick"]]
#plt.figure(figsize=[50, 4.8])
for col in view_into_list.iloc[:, -3:].columns:
    view_into_list[view_into_list["Length"] == 10][col].hist(bins=10, legend=col)

# show = view_into_list[view_into_list["Length"] == 750][["Time merge"]]
# show.hist(bins=10)
plt.show()
print("END")
"""
# print(view_into["Time quick"])
# select_faster = view_into[view_into['Time select'] < view_into['Time insert']]
# insert_faster = view_into[view_into['Time select'] > view_into['Time insert']]
# insert_faster['Difference sel-ins'] = view_into['Time select'] - view_into['Time insert']

#one_size = view_into[view_into["Length"] == 10]
#one_size = one_size[['Time py', 'Time bubble', 'Time select', 'Time insert', 'Time merge', 'Time quick']]
#print(one_size.describe())
#print(one_size)


"""
def get_biggest(numbers):
    if not numbers:
        return -1

    li = [str(i) for i in numbers]
    lenght = len(li)

    for i in range(lenght):
        index = i
        for j in range(i + 1, lenght):
            if li[j] + li[index] > li[index] + li[j]:
                index = j
        li[i], li[index] = li[index], li[i]

    return li
out_my = ['998', '9926', '9880', '9866', '9859', '9845', '9842', '9826', '9811', '9811', '9788', '9784', '9777', '9766', '975', '9745', '9721', '9719', '9705', '96', '96', '9693', '9686', '9671', '9664', '9662', '9627', '9623', '9622', '9621', '9603', '959', '9576', '9564', '9560', '953', '9534', '9522', '9508', '9508', '9506', '9490', '948', '9460', '9455', '9421', '9421', '9419', '9407', '9400', '9399', '93', '9390', '9369', '935', '9346', '9341', '9323', '9317', '9317', '9297', '9288', '9283', '9255', '9247', '9232', '9227', '9223', '9221', '9207', '9201', '919', '9195', '9193', '9191', '9187', '9186', '9176', '9164', '9157', '9150', '9132', '9130', '9129', '9123', '9115', '9107', '9107', '9078', '9059', '9056', '9050', '9048', '9046', '9039', '9034', '9034', '9028', '9026', '9022', '9022', '89', '8984', '897', '8976', '8970', '8970', '8960', '895', '8951', '8934', '8931', '8926', '8922', '8915', '8914', '8913', '8890', '8889', '8', '8879', '8876', '8872', '8868', '8848', '8838', '8837', '8833', '8833', '8831', '8826', '8818', '8815', '8806', '8771', '8770', '8767', '8750', '8748', '8747', '8723', '8721', '8660', '8652', '8630', '8622', '8621', '8611', '8570', '8552', '8546', '8526', '8526', '8520', '8506', '8506', '8499', '8494', '8445', '841', '8417', '8413', '8399', '8397', '8358', '8358', '8354', '8335', '8320', '831', '8311', '8308', '8288', '8287', '8275', '8244', '8237', '8199', '8187', '816', '8167', '8167', '8151', '8146', '812', '8118', '8087', '8083', '8082', '8076', '8073', '8035', '8001', '7964', '7955', '7953', '7947', '7938', '7936', '7919', '790', '7887', '7882', '7880', '7862', '7850', '7839', '7837', '7831', '7829', '7827', '7826', '7822', '780', '7805', '7795', '7778', '7', '7', '776', '7763', '774', '7743', '7736', '772', '7718', '7717', '7716', '7705', '7697', '7686', '7675', '7663', '7646', '7639', '7637', '7634', '7623', '7608', '7607', '7604', '7569', '7553', '7523', '750', '7502', '7497', '749', '7496', '7492', '7480', '7477', '7466', '7451', '7420', '7388', '737', '7372', '7360', '7341', '7330', '732', '7311', '7298', '7295', '7293', '7293', '7274', '72', '7259', '7254', '7241', '7235', '7230', '7220', '7212', '7204', '7203', '7176', '7169', '7166', '7165', '7161', '7155', '7152', '7150', '7139', '7129', '7119', '7101', '7092', '7062', '7042', '7037', '7030', '7012', '7009', '7005', '6991', '698', '6977', '6970', '6959', '6953', '6952', '6950', '6917', '6914', '6903', '6893', '6891', '6876', '686', '6835', '6835', '6835', '6830', '682', '6825', '6816', '681', '6813', '6772', '6772', '6767', '6755', '6746', '674', '6735', '672', '6724', '670', '669', '6684', '6664', '6656', '6654', '6636', '6627', '6626', '6611', '6601', '6597', '6596', '6596', '6595', '6592', '6584', '6581', '6557', '6555', '6525', '6525', '650', '6495', '6489', '6473', '6457', '645', '6455', '6435', '6411', '6390', '6390', '6380', '6370', '6369', '6368', '6361', '6354', '6344', '6331', '6329', '6296', '6288', '6281', '6279', '6277', '6272', '6264', '6249', '623', '6233', '6231', '6215', '6208', '6205', '6198', '6186', '6186', '6176', '6171', '6171', '6151', '6151', '6148', '6147', '613', '6114', '6111', '6108', '6107', '610', '6097', '6092', '6069', '6067', '6056', '6055', '6052', '603', '6034', '6023', '6022', '600', '6004', '5991', '5985', '5981', '5978', '5977', '596', '59', '5955', '5954', '5929', '5923', '5922', '5912', '5898', '5882', '587', '5864', '5844', '5829', '5827', '5806', '579', '5772', '5748', '5736', '5735', '5730', '5728', '5708', '5699', '5696', '5682', '5677', '5661', '5644', '5628', '5627', '5611', '560', '5592', '5580', '5575', '5558', '5556', '55', '5551', '5533', '5528', '5527', '552', '5515', '5507', '5505', '5501', '5492', '5478', '5471', '5471', '5470', '5470', '5465', '5459', '5456', '54', '5435', '5415', '5404', '5398', '5375', '5355', '5318', '5318', '5307', '5301', '5296', '5292', '5283', '527', '5272', '5253', '5248', '5246', '5239', '5228', '5225', '5224', '5223', '5205', '5199', '5187', '5168', '5164', '5149', '5132', '5126', '5125', '5085', '5076', '507', '5072', '5068', '5067', '5064', '5061', '5057', '5022', '5015', '5006', '4997', '4994', '4984', '4975', '4975', '4965', '4955', '4954', '49', '4928', '4919', '4911', '4898', '4897', '4892', '4881', '4877', '4859', '484', '4843', '4838', '483', '4800', '4800', '4771', '4753', '4751', '47', '4734', '4729', '4722', '4721', '4717', '4708', '4698', '4695', '4694', '4684', '4659', '4656', '4655', '4654', '465', '4649', '4642', '4641', '4633', '4632', '4625', '4624', '4620', '461', '4612', '460', '4603', '4573', '4561', '4561', '4560', '4533', '4533', '452', '4510', '4509', '448', '4473', '4468', '4467', '4462', '4461', '4447', '4436', '4431', '4428', '4426', '4421', '4404', '440', '4380', '4379', '4366', '4360', '4359', '4358', '4342', '4329', '4326', '4317', '431', '4310', '4304', '4302', '427', '4273', '4267', '4260', '4252', '424', '4242', '4242', '4239', '4236', '4223', '4222', '4219', '4208', '4207', '4198', '4192', '4186', '418', '4175', '4160', '4155', '4135', '4124', '4100', '4093', '4089', '4084', '4084', '4082', '4064', '4053', '4039', '4035', '4025', '4019', '4011', '4009', '4006', '3992', '3969', '3957', '394', '3929', '3927', '3925', '392', '3922', '3903', '3903', '3890', '3884', '3882', '3867', '3866', '3860', '3854', '3850', '3849', '3839', '3830', '3786', '3786', '3784', '3782', '3769', '3757', '3755', '3747', '3737', '372', '3708', '3703', '3696', '3690', '3689', '3676', '3664', '3655', '3647', '3643', '3639', '3636', '3633', '3632', '3632', '3628', '3623', '3618', '3608', '3608', '3588', '3580', '3574', '3569', '3565', '3561', '3546', '3542', '3512', '3512', '3511', '3499', '3497', '3497', '3495', '349', '3485', '3485', '3481', '3461', '3454', '3451', '3451', '3447', '3438', '3431', '3425', '3417', '3402', '3384', '3375', '3365', '3351', '3347', '3346', '3345', '3344', '3321', '3318', '3314', '3308', '3296', '3284', '3254', '3253', '3245', '32', '3231', '3224', '3218', '3215', '3201', '3190', '3176', '317', '3164', '3156', '3155', '3154', '3150', '3145', '3140', '3136', '3101', '3100', '3095', '3094', '3063', '3048', '3026', '3014', '2997', '2989', '2987', '2986', '2984', '2981', '2969', '2958', '2958', '2954', '295', '2941', '291', '2907', '2890', '2874', '2871', '2843', '283', '2817', '2810', '2794', '2792', '2789', '278', '2780', '2768', '2761', '2756', '2750', '2745', '274', '2741', '2734', '2731', '2720', '271', '271', '2699', '2689', '2675', '267', '2667', '2663', '2631', '262', '2592', '259', '2591', '2588', '2576', '257', '2568', '256', '254', '2531', '2528', '2520', '2514', '2511', '2507', '2484', '2482', '2472', '2472', '2462', '2458', '2442', '2423', '241', '2401', '2394', '2391', '2358', '2350', '2342', '2335', '2330', '2327', '2280', '2277', '2272', '2271', '2270', '2259', '2259', '2258', '2228', '2227', '2225', '2224', '2222', '2212', '221', '2199', '2169', '2165', '2153', '2150', '2138', '2131', '2129', '210', '2078', '2058', '2048', '2044', '2021', '2018', '2018', '2011', '2007', '2006', '1974', '1966', '1953', '193', '1929', '1922', '1919', '190', '1877', '1859', '1857', '1845', '1833', '1831', '1823', '1822', '1797', '1779', '1777', '1768', '1758', '1754', '1751', '1745', '1731', '1721', '1721', '1713', '1709', '1705', '1699', '1695', '1694', '167', '1650', '1621', '1617', '1615', '1610', '1599', '1577', '1576', '1573', '1551', '1549', '1526', '1512', '1507', '1496', '1481', '1444', '1443', '1431', '1427', '1416', '1390', '1378', '1368', '1356', '1355', '1354', '135', '1349', '1345', '1344', '1342', '1339', '1339', '1338', '1334', '1328', '1323', '1314', '1302', '1273', '1273', '127', '1269', '1256', '1254', '1250', '1243', '1231', '122', '1208', '1206', '1191', '1191', '1188', '1166', '1121', '1115', '1112', '1111', '1106', '1092', '109', '1086', '1086', '1081', '1068', '1055', '1053', '1026', '1012', '1010', '1006', '1003', '1000']
out_their = get_biggest([3347, 3737, 4919, 6296, 4984, 424, 8837, 2482, 6264, 6361, 3769, 650, 1334, 3100, 9107, 8723, 2048, 6495, 2018, 7716, 3747, 8417, 4632, 4684, 55, 4620, 7705, 9603, 6597, 5398, 9621, 1953, 2689, 6023, 6835, 1745, 5187, 3628, 5533, 4911, 8934, 4624, 1705, 8767, 1188, 2228, 4462, 1006, 816, 4053, 3929, 4843, 596, 5239, 8833, 8660, 4267, 4379, 6171, 452, 392, 1974, 1573, 6755, 8926, 1338, 460, 9346, 3882, 4892, 2511, 600, 5126, 3866, 587, 3048, 998, 9455, 5556, 256, 8237, 9719, 5465, 2138, 8552, 9341, 4208, 7938, 1231, 8413, 3903, 6151, 7235, 7176, 8073, 6097, 7686, 6092, 9191, 6215, 9788, 2327, 8652, 6473, 2667, 3497, 1768, 3481, 3561, 7, 1254, 9560, 3636, 5827, 7451, 1354, 6151, 3608, 274, 935, 3632, 4659, 2423, 5806, 6891, 953, 4975, 1754, 5085, 5735, 2568, 6914, 190, 6953, 9034, 6069, 5355, 1617, 5575, 895, 9132, 2472, 9157, 5168, 6368, 5223, 6233, 2890, 1576, 9845, 1859, 7012, 3782, 5471, 5736, 6735, 8970, 3417, 7009, 3253, 4603, 7697, 6277, 9123, 3318, 2794, 6772, 1390, 5061, 5404, 271, 7298, 2484, 8890, 4006, 5132, 109, 9721, 1650, 9107, 5224, 8546, 349, 7497, 7778, 3461, 4198, 317, 7795, 3201, 1797, 6991, 9766, 5076, 6813, 6279, 7919, 3224, 8526, 7608, 1355, 9022, 5912, 8750, 2592, 9506, 7882, 5375, 7718, 1922, 5528, 4260, 3957, 9232, 7827, 1919, 3690, 3314, 2631, 1328, 4655, 1092, 3643, 6231, 7947, 7826, 6380, 9664, 9522, 6950, 8748, 5205, 2907, 1208, 4326, 6354, 5978, 1115, 2462, 8308, 4642, 6724, 4698, 3925, 4175, 3136, 9880, 5696, 6034, 9164, 5627, 7139, 3784, 2271, 8815, 2458, 3154, 3632, 3867, 3150, 8358, 6684, 527, 2981, 6390, 5844, 1695, 2442, 9400, 780, 4342, 427, 431, 1551, 1055, 4468, 4800, 6835, 7639, 49, 4236, 4160, 4186, 7101, 2987, 2986, 3014, 3375, 2225, 8035, 8622, 4093, 5318, 9421, 5068, 3454, 6592, 9317, 72, 4509, 254, 790, 3696, 7037, 1549, 6636, 9421, 4426, 122, 1068, 7330, 2472, 2018, 3095, 6369, 4561, 9826, 6903, 1507, 9056, 6108, 9288, 7502, 8199, 6555, 1342, 5558, 8082, 5898, 4380, 2591, 3254, 6331, 1256, 6654, 2745, 2011, 7152, 1615, 7634, 4955, 8721, 2741, 8868, 8848, 2507, 5985, 6656, 2958, 5149, 4533, 127, 5501, 8083, 3884, 9059, 8872, 9129, 1481, 9508, 9227, 1731, 5072, 5471, 9247, 8914, 3438, 7241, 4124, 4404, 1857, 2342, 1431, 4694, 8976, 7477, 1112, 2224, 7161, 1694, 267, 461, 9369, 8151, 3218, 7553, 4649, 2528, 4011, 7829, 193, 4560, 2272, 8146, 5015, 8287, 4084, 7, 3284, 4317, 9662, 3664, 5272, 5228, 2731, 3308, 674, 8167, 8494, 5199, 6611, 7604, 1111, 3511, 3063, 1339, 93, 2750, 3512, 3703, 9034, 2874, 7955, 7212, 6525, 6281, 2810, 5829, 8520, 2199, 6584, 749, 8931, 7837, 3094, 1877, 3618, 7155, 4304, 6198, 5882, 7293, 4155, 7736, 9399, 9201, 8826, 2330, 2958, 8818, 2675, 2391, 9039, 1758, 4533, 6056, 32, 8358, 4360, 483, 1699, 2258, 5923, 8499, 4242, 4734, 5415, 2259, 3927, 4359, 2588, 3176, 670, 4881, 5225, 5248, 9221, 1003, 4366, 9297, 271, 6746, 3145, 776, 7119, 3890, 2078, 7523, 4656, 4310, 7360, 5929, 2997, 2044, 8771, 5628, 2969, 4641, 9623, 8922, 1599, 1751, 3402, 7839, 4633, 831, 3786, 3689, 5682, 669, 3623, 5507, 1966, 1721, 4898, 4009, 2165, 4612, 6111, 6055, 1344, 1302, 2222, 8951, 6959, 1053, 6557, 2663, 4302, 959, 7295, 9859, 6596, 4223, 4561, 5991, 8244, 6288, 5057, 8838, 3190, 9050, 2761, 7887, 5699, 5551, 8506, 8187, 5459, 1339, 7254, 6411, 9317, 3296, 2129, 6525, 3155, 4928, 4721, 8831, 3757, 3830, 7763, 2358, 9777, 6390, 5006, 5318, 1000, 4252, 6186, 1822, 4035, 7743, 5301, 5307, 5644, 3786, 3849, 6107, 291, 7293, 7042, 8, 7230, 3384, 6489, 2843, 5470, 672, 3542, 1323, 6970, 1526, 6830, 3447, 4064, 5022, 5661, 4089, 3451, 9130, 6595, 4421, 9671, 2984, 4729, 7831, 1273, 6664, 9150, 3860, 7822, 7311, 210, 3485, 2768, 7496, 6626, 3497, 3451, 3344, 4722, 8970, 4135, 4192, 59, 8915, 3156, 5772, 2270, 5470, 698, 3499, 8913, 4751, 2021, 7675, 7805, 8397, 3839, 4082, 4473, 5730, 2531, 6596, 3345, 7005, 241, 5955, 1121, 1086, 96, 9866, 9490, 5677, 7607, 3245, 5981, 3351, 5977, 1012, 2169, 8621, 682, 8118, 7569, 4084, 262, 2401, 5456, 3215, 6176, 5505, 2350, 3969, 6816, 8879, 7466, 9115, 4100, 4897, 8076, 257, 1206, 9811, 5708, 8506, 7850, 9186, 9784, 6435, 1081, 8889, 1845, 6186, 9255, 4800, 603, 686, 6825, 6208, 2576, 3164, 6004, 6772, 1349, 9390, 9223, 6977, 1496, 2789, 4242, 5296, 2394, 3647, 418, 9407, 7220, 8445, 2006, 6344, 5246, 5527, 9026, 5064, 2720, 3574, 4573, 5492, 9564, 9686, 812, 4654, 96, 9508, 8288, 1709, 8335, 2058, 5580, 4273, 8275, 9207, 6067, 5728, 9627, 1721, 7646, 4329, 5611, 3633, 7030, 4510, 440, 1010, 3588, 5922, 1929, 3569, 3922, 774, 9705, 5125, 7623, 47, 3655, 1368, 7259, 1610, 9745, 2989, 6114, 7204, 5592, 1621, 8001, 221, 7880, 4039, 3346, 89, 2280, 3101, 1243, 448, 54, 2699, 3365, 3495, 1356, 1443, 9323, 3903, 9028, 4461, 6249, 1577, 7964, 4207, 7341, 4994, 4219, 2277, 259, 1777, 3854, 7420, 552, 484, 737, 579, 4239, 560, 9693, 5864, 4975, 8747, 1427, 3140, 2335, 1833, 3755, 9187, 8806, 6581, 4222, 7480, 1086, 6893, 9048, 6917, 7203, 1345, 3546, 8320, 6601, 4428, 948, 3026, 4025, 465, 2150, 9022, 7663, 6272, 3850, 278, 2871, 6329, 7092, 1512, 5253, 7717, 8354, 6835, 8399, 3231, 1713, 2007, 2520, 4431, 8876, 2153, 4877, 919, 1269, 6148, 5435, 1779, 167, 681, 7862, 1831, 1823, 9842, 7388, 9460, 8960, 8526, 5478, 9078, 732, 7169, 6455, 6876, 2734, 6767, 2817, 9283, 1191, 750, 7165, 4954, 897, 2780, 8087, 3425, 4358, 8984, 7637, 1314, 5515, 2941, 4859, 1106, 1444, 4753, 975, 1166, 2131, 135, 3580, 7062, 1273, 772, 4447, 4997, 8833, 4467, 8311, 6052, 1191, 4625, 3608, 8167, 2954, 610, 5292, 3431, 8630, 372, 4019, 9926, 6147, 2792, 3708, 7372, 7150, 5164, 2756, 7936, 1250, 5748, 3992, 4838, 7166, 9811, 2227, 7492, 5954, 8611, 5067, 394, 9576, 9622, 9195, 295, 4965, 3321, 8770, 613, 2212, 9534, 6627, 9046, 9176, 7129, 645, 3512, 6205, 5283, 6171, 3639, 283, 3565, 1026, 4717, 2259, 4695, 7274, 6952, 623, 9193, 6457, 4436, 7953, 4708, 6022, 4771, 9419, 1416, 3485, 2514, 1378, 3676, 841, 6370, 8570, 507])
print(out_their)
out_their = ['998', '9926', '9880', '9866', '9859', '9845', '9842', '9826', '9811', '9811', '9788', '9784', '9777', '9766', '975', '9745', '9721', '9719', '9705', '96', '96', '9693', '9686', '9671', '9664', '9662', '9627', '9623', '9622', '9621', '9603', '959', '9576', '9564', '9560', '953', '9534', '9522', '9508', '9508', '9506', '9490', '948', '9460', '9455', '9421', '9421', '9419', '9407', '9400', '9399', '93', '9390', '9369', '935', '9346', '9341', '9323', '9317', '9317', '9297', '9288', '9283', '9255', '9247', '9232', '9227', '9223', '9221', '9207', '9201', '919', '9195', '9193', '9191', '9187', '9186', '9176', '9164', '9157', '9150', '9132', '9130', '9129', '9123', '9115', '9107', '9107', '9078', '9059', '9056', '9050', '9048', '9046', '9039', '9034', '9034', '9028', '9026', '9022', '9022', '89', '8984', '897', '8976', '8970', '8970', '8960', '895', '8951', '8934', '8931', '8926', '8922', '8915', '8914', '8913', '8890', '8889', '8', '8879', '8876', '8872', '8868', '8848', '8838', '8837', '8833', '8833', '8831', '8826', '8818', '8815', '8806', '8771', '8770', '8767', '8750', '8748', '8747', '8723', '8721', '8660', '8652', '8630', '8622', '8621', '8611', '8570', '8552', '8546', '8526', '8526', '8520', '8506', '8506', '8499', '8494', '8445', '841', '8417', '8413', '8399', '8397', '8358', '8358', '8354', '8335', '8320', '831', '8311', '8308', '8288', '8287', '8275', '8244', '8237', '8199', '8187', '816', '8167', '8167', '8151', '8146', '812', '8118', '8087', '8083', '8082', '8076', '8073', '8035', '8001', '7964', '7955', '7953', '7947', '7938', '7936', '7919', '790', '7887', '7882', '7880', '7862', '7850', '7839', '7837', '7831', '7829', '7827', '7826', '7822', '780', '7805', '7795', '7778', '7', '7', '776', '7763', '774', '7743', '7736', '772', '7718', '7717', '7716', '7705', '7697', '7686', '7675', '7663', '7646', '7639', '7637', '7634', '7623', '7608', '7607', '7604', '7569', '7553', '7523', '750', '7502', '7497', '749', '7496', '7492', '7480', '7477', '7466', '7451', '7420', '7388', '737', '7372', '7360', '7341', '7330', '732', '7311', '7298', '7295', '7293', '7293', '7274', '72', '7259', '7254', '7241', '7235', '7230', '7220', '7212', '7204', '7203', '7176', '7169', '7166', '7165', '7161', '7155', '7152', '7150', '7139', '7129', '7119', '7101', '7092', '7062', '7042', '7037', '7030', '7012', '7009', '7005', '6991', '698', '6977', '6970', '6959', '6953', '6952', '6950', '6917', '6914', '6903', '6893', '6891', '6876', '686', '6835', '6835', '6835', '6830', '682', '6825', '681', '6816', '6813', '6772', '6772', '6767', '6755', '674', '6746', '6735', '672', '6724', '670', '669', '6684', '6664', '6656', '6654', '6636', '6627', '6626', '6611', '6601', '6597', '6596', '6596', '6595', '6592', '6584', '6581', '6557', '6555', '6525', '6525', '650', '6495', '6489', '6473', '6457', '645', '6455', '6435', '6411', '6390', '6390', '6380', '6370', '6369', '6368', '6361', '6354', '6344', '6331', '6329', '6296', '6288', '6281', '6279', '6277', '6272', '6264', '6249', '623', '6233', '6231', '6215', '6208', '6205', '6198', '6186', '6186', '6176', '6171', '6171', '6151', '6151', '6148', '6147', '613', '6114', '6111', '6108', '6107', '610', '6097', '6092', '6069', '6067', '6056', '6055', '6052', '603', '6034', '6023', '6022', '600', '6004', '5991', '5985', '5981', '5978', '5977', '596', '59', '5955', '5954', '5929', '5923', '5922', '5912', '5898', '5882', '587', '5864', '5844', '5829', '5827', '5806', '579', '5772', '5748', '5736', '5735', '5730', '5728', '5708', '5699', '5696', '5682', '5677', '5661', '5644', '5628', '5627', '5611', '560', '5592', '5580', '5575', '5558', '5556', '55', '5551', '5533', '5528', '5527', '552', '5515', '5507', '5505', '5501', '5492', '5478', '5471', '5471', '5470', '5470', '5465', '5459', '5456', '54', '5435', '5415', '5404', '5398', '5375', '5355', '5318', '5318', '5307', '5301', '5296', '5292', '5283', '527', '5272', '5253', '5248', '5246', '5239', '5228', '5225', '5224', '5223', '5205', '5199', '5187', '5168', '5164', '5149', '5132', '5126', '5125', '5085', '5076', '507', '5072', '5068', '5067', '5064', '5061', '5057', '5022', '5015', '5006', '4997', '4994', '4984', '4975', '4975', '4965', '4955', '4954', '49', '4928', '4919', '4911', '4898', '4897', '4892', '4881', '4877', '4859', '484', '4843', '4838', '483', '4800', '4800', '4771', '4753', '4751', '47', '4734', '4729', '4722', '4721', '4717', '4708', '4698', '4695', '4694', '4684', '4659', '4656', '4655', '465', '4654', '4649', '4642', '4641', '4633', '4632', '4625', '4624', '4620', '461', '4612', '460', '4603', '4573', '4561', '4561', '4560', '4533', '4533', '452', '4510', '4509', '448', '4473', '4468', '4467', '4462', '4461', '4447', '4436', '4431', '4428', '4426', '4421', '4404', '440', '4380', '4379', '4366', '4360', '4359', '4358', '4342', '4329', '4326', '4317', '431', '4310', '4304', '4302', '427', '4273', '4267', '4260', '4252', '424', '4242', '4242', '4239', '4236', '4223', '4222', '4219', '4208', '4207', '4198', '4192', '4186', '418', '4175', '4160', '4155', '4135', '4124', '4100', '4093', '4089', '4084', '4084', '4082', '4064', '4053', '4039', '4035', '4025', '4019', '4011', '4009', '4006', '3992', '3969', '3957', '394', '3929', '3927', '3925', '392', '3922', '3903', '3903', '3890', '3884', '3882', '3867', '3866', '3860', '3854', '3850', '3849', '3839', '3830', '3786', '3786', '3784', '3782', '3769', '3757', '3755', '3747', '3737', '372', '3708', '3703', '3696', '3690', '3689', '3676', '3664', '3655', '3647', '3643', '3639', '3636', '3633', '3632', '3632', '3628', '3623', '3618', '3608', '3608', '3588', '3580', '3574', '3569', '3565', '3561', '3546', '3542', '3512', '3512', '3511', '3499', '3497', '3497', '3495', '349', '3485', '3485', '3481', '3461', '3454', '3451', '3451', '3447', '3438', '3431', '3425', '3417', '3402', '3384', '3375', '3365', '3351', '3347', '3346', '3345', '3344', '3321', '3318', '3314', '3308', '3296', '3284', '3254', '3253', '3245', '32', '3231', '3224', '3218', '3215', '3201', '3190', '3176', '317', '3164', '3156', '3155', '3154', '3150', '3145', '3140', '3136', '3101', '3100', '3095', '3094', '3063', '3048', '3026', '3014', '2997', '2989', '2987', '2986', '2984', '2981', '2969', '2958', '2958', '2954', '295', '2941', '291', '2907', '2890', '2874', '2871', '2843', '283', '2817', '2810', '2794', '2792', '2789', '278', '2780', '2768', '2761', '2756', '2750', '2745', '274', '2741', '2734', '2731', '2720', '271', '271', '2699', '2689', '2675', '267', '2667', '2663', '2631', '262', '259', '2592', '2591', '2588', '2576', '257', '2568', '256', '254', '2531', '2528', '2520', '2514', '2511', '2507', '2484', '2482', '2472', '2472', '2462', '2458', '2442', '2423', '241', '2401', '2394', '2391', '2358', '2350', '2342', '2335', '2330', '2327', '2280', '2277', '2272', '2271', '2270', '2259', '2259', '2258', '2228', '2227', '2225', '2224', '2222', '2212', '221', '2199', '2169', '2165', '2153', '2150', '2138', '2131', '2129', '210', '2078', '2058', '2048', '2044', '2021', '2018', '2018', '2011', '2007', '2006', '1974', '1966', '1953', '193', '1929', '1922', '1919', '190', '1877', '1859', '1857', '1845', '1833', '1831', '1823', '1822', '1797', '1779', '1777', '1768', '1758', '1754', '1751', '1745', '1731', '1721', '1721', '1713', '1709', '1705', '1699', '1695', '1694', '167', '1650', '1621', '1617', '1615', '1610', '1599', '1577', '1576', '1573', '1551', '1549', '1526', '1512', '1507', '1496', '1481', '1444', '1443', '1431', '1427', '1416', '1390', '1378', '1368', '1356', '1355', '1354', '135', '1349', '1345', '1344', '1342', '1339', '1339', '1338', '1334', '1328', '1323', '1314', '1302', '1273', '1273', '127', '1269', '1256', '1254', '1250', '1243', '1231', '122', '1208', '1206', '1191', '1191', '1188', '1166', '1121', '1115', '1112', '1111', '1106', '1092', '109', '1086', '1086', '1081', '1068', '1055', '1053', '1026', '1012', '1010', '1006', '1003', '1000']
for i in range(len(out_my)):
    if out_my[i] != out_their[i]:
        print(i, out_my[i])
"""

